@Demo_Api_HostAddress_Https = https://localhost:7089
@Demo_Api_HostAddress_Http = http://localhost:5245
@Demo_Api_HostAddress_Docker = http://localhost:5001
@baseUrl = {{Demo_Api_HostAddress_Docker}}

###############################################################################
# HEALTH CHECK ENDPOINT
###############################################################################

### 1. Basic Health Check
# Expected: 200 OK - Health check endpoint is always available
GET {{baseUrl}}/health
Accept: application/json

###############################################################################
# NOTIFICATION ENDPOINTS (Simple Feature Flag - new-email-service)
###############################################################################

### 2. Send Email - Tests new-email-service feature flag
# Expected: 200 OK - Returns email service response (new or legacy based on flag)
# Reason: Endpoint always succeeds, flag only controls which implementation is used
GET {{baseUrl}}/send-email
Accept: application/json

###############################################################################
# PRODUCT ENDPOINTS (Multiple Feature Flag Types)
###############################################################################

### 3. Products - Simple Feature Flag (new-product-api: Disabled by default)
# Expected: 200 OK - Returns product list (v1 or v2 based on flag state)
# Reason: Endpoint always returns products, flag controls API version
GET {{baseUrl}}/products
Accept: application/json
User-Id: user123
User-Type: standard

### 4. Featured Products - Scheduled Feature Flag (featured-products-launch: Scheduled)
# Expected: 200 OK - Returns featured products (legacy or launch version)
# Reason: Endpoint always succeeds, content varies based on schedule
GET {{baseUrl}}/products/featured
Accept: application/json
User-Id: user123

### 5. Enhanced Catalog - Time Window Feature Flag (enhanced-catalog-ui: Business hours only)
# Expected: 200 OK - Returns catalog (standard or enhanced based on time window)
# Reason: Endpoint always returns catalog, features vary by time
GET {{baseUrl}}/products/catalog
Accept: application/json
User-Id: user123
Timezone: America/New_York

###############################################################################
# ORDER ENDPOINTS (Percentage Rollout A/B Testing)
###############################################################################

### 6. Create Order - Percentage Rollout (checkout-version: 33% get v2/v3)
# Expected: 200 OK - Returns order confirmation with version info
# Reason: Order processing always succeeds, variation controls implementation
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: user123

{
  "productId": "product-123",
  "quantity": 2,
  "totalPrice": 99.99
}

### 7. Create Order - Different User (Different hash result)
# Expected: 200 OK - Returns order confirmation (may use different version)
# Reason: Different user ID may result in different checkout version
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: user456

{
  "productId": "product-456",
  "quantity": 1,
  "totalPrice": 49.99
}

### 8. Create Order - Premium User (May get different targeting)
# Expected: 200 OK - Returns order confirmation
# Reason: Premium users may get prioritized for newer checkout versions
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: premium-user789
User-Type: premium
Country: US

{
  "productId": "product-789",
  "quantity": 3,
  "totalPrice": 299.99
}

###############################################################################
# RECOMMENDATION ENDPOINTS (User Targeting with Rich Context)
###############################################################################

### 9. Recommendations - Standard User (Default: collaborative-filtering)
# Expected: 200 OK - Returns collaborative filtering recommendations
# Reason: Standard users in non-targeted countries get default algorithm
GET {{baseUrl}}/recommendations/user123
Accept: application/json
User-Id: user123
User-Type: standard
Country: FR

### 10. Recommendations - Premium User (Should get machine-learning algorithm)
# Expected: 200 OK - Returns ML-based recommendations
# Reason: Premium users are targeted for machine-learning algorithm
GET {{baseUrl}}/recommendations/premium-user456
Accept: application/json
User-Id: premium-user456
User-Type: premium
Country: US

### 11. Recommendations - Enterprise User (Should get machine-learning algorithm)
# Expected: 200 OK - Returns ML-based recommendations
# Reason: Enterprise users are targeted for machine-learning algorithm
GET {{baseUrl}}/recommendations/enterprise-user789
Accept: application/json
User-Id: enterprise-user789
User-Type: enterprise
Country: CA

### 12. Recommendations - US/CA/UK User (Should get content-based algorithm)
# Expected: 200 OK - Returns content-based recommendations
# Reason: Users from US/CA/UK are targeted for content-based algorithm
GET {{baseUrl}}/recommendations/user-uk001
Accept: application/json
User-Id: user-uk001
User-Type: standard
Country: UK

### 13. Recommendations - User from Other Country (Should get collaborative-filtering)
# Expected: 200 OK - Returns collaborative filtering recommendations
# Reason: Users from other countries get default collaborative filtering
GET {{baseUrl}}/recommendations/user-de001
Accept: application/json
User-Id: user-de001
User-Type: standard
Country: DE

###############################################################################
# ADMIN ENDPOINTS (Role-Based Targeting)
###############################################################################

### 14. Admin Operation - Regular User (Should return 404)
# Expected: 404 Not Found - Feature doesn't exist for this user
# Reason: Role "user" and department "marketing" don't match targeting rules (admin/super-admin roles OR engineering/operations departments)
GET {{baseUrl}}/admin/sensitive-operation
Accept: application/json
User-Id: regular-user123
Role: user
Department: marketing

### 15. Admin Operation - Admin User (Should succeed)
# Expected: 200 OK - Returns "Sensitive operation completed"
# Reason: Role "admin" matches targeting rule (role in ["admin", "super-admin"] → variation "on")
GET {{baseUrl}}/admin/sensitive-operation
Accept: application/json
User-Id: admin-user456
Role: admin
Department: engineering

### 16. Admin Operation - Super Admin (Should succeed)
# Expected: 200 OK - Returns "Sensitive operation completed"
# Reason: Role "super-admin" matches targeting rule (role in ["admin", "super-admin"] → variation "on")
GET {{baseUrl}}/admin/sensitive-operation
Accept: application/json
User-Id: superadmin-user789
Role: super-admin
Department: operations

### 17. Admin Operation - Engineering Department (Should succeed)
# Expected: 200 OK - Returns "Sensitive operation completed"
# Reason: Department "engineering" matches targeting rule (department in ["engineering", "operations"] → variation "on")
GET {{baseUrl}}/admin/sensitive-operation
Accept: application/json
User-Id: eng-user001
Role: developer
Department: engineering

### 18. Admin Operation - Operations Department (Should succeed)
# Expected: 200 OK - Returns "Sensitive operation completed"
# Reason: Department "operations" matches targeting rule (department in ["engineering", "operations"] → variation "on")
GET {{baseUrl}}/admin/sensitive-operation
Accept: application/json
User-Id: ops-user001
Role: operator
Department: operations

###############################################################################
# FEATURE FLAG TESTING SCENARIOS
###############################################################################

### 19. Test During Business Hours (Enhanced Catalog should be enabled)
# Expected: 200 OK - Returns enhanced catalog with advanced features
# Reason: Business hours (9 AM - 6 PM CST, Mon-Fri) enable enhanced-catalog-ui
GET {{baseUrl}}/products/catalog
Accept: application/json
User-Id: business-hours-test
Timezone: America/Chicago

### 20. Test Outside Business Hours (Enhanced Catalog should be disabled)
# Expected: 200 OK - Returns standard catalog with basic features
# Reason: Outside business hours, enhanced-catalog-ui is disabled
GET {{baseUrl}}/products/catalog
Accept: application/json
User-Id: after-hours-test
Timezone: America/New_York

### 21. Test Scheduled Feature (Check if featured products launch is active)
# Expected: 200 OK - Returns featured products (legacy or launch based on schedule)
# Reason: Scheduled flag determines which featured products version is shown
GET {{baseUrl}}/products/featured
Accept: application/json
User-Id: scheduled-test

###############################################################################
# EDGE CASES AND ERROR SCENARIOS
###############################################################################

### 22. Test with Missing User Context
# Expected: 200 OK - Returns collaborative filtering recommendations (default)
# Reason: Missing context falls back to default algorithm variation
GET {{baseUrl}}/recommendations/no-context-user
Accept: application/json

### 23. Test with Invalid User Type
# Expected: 200 OK - Returns collaborative filtering recommendations (default)
# Reason: Invalid user type doesn't match targeting rules, uses default
GET {{baseUrl}}/recommendations/invalid-user
Accept: application/json
User-Id: invalid-user
User-Type: invalid-type
Country: XX

### 24. Test Order without User ID (Should still work with percentage rollout)
# Expected: 200 OK - Returns order confirmation with checkout version
# Reason: Percentage rollout works without user context using request hash
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "productId": "no-user-product",
  "quantity": 1,
  "totalPrice": 19.99
}

###############################################################################
# TESTING DIFFERENT PERCENTAGE ROLLOUT RESULTS
###############################################################################

### 25. Test Multiple Users for Checkout Version Distribution
# These should demonstrate different checkout versions based on user hash

### User 001 - Checkout Version Test
# Expected: 200 OK - Returns order with checkout version (v1/v2/v3 based on hash)
# Reason: 33% percentage rollout distributes users across versions
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: test-user-001

{
  "productId": "test-product",
  "quantity": 1,
  "totalPrice": 10.00
}

### 26. User 007 - Checkout Version Test
# Expected: 200 OK - Returns order with checkout version (likely different from 001)
# Reason: Different user hash may result in different checkout version
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: test-user-007

{
  "productId": "test-product",
  "quantity": 1,
  "totalPrice": 10.00
}

### 27. User 10 - Checkout Version Test
# Expected: 200 OK - Returns order with checkout version
# Reason: Demonstrates percentage rollout distribution across users
POST {{baseUrl}}/orders
Content-Type: application/json
User-Id: test-user-10

{
  "productId": "test-product",
  "quantity": 1,
  "totalPrice": 10.00
}


###############################################################################
# TESTING NOTES
###############################################################################

# FEATURE FLAG EXPECTED BEHAVIORS:
#
# 1. new-email-service (Disabled): Should use legacy email service
# 2. new-product-api (Disabled): Should return v1 products
# 3. featured-products-launch (Scheduled): Depends on current time vs scheduled dates
# 4. enhanced-catalog-ui (Time Window): Only enabled 9AM-6PM EST, Mon-Fri
# 5. checkout-version (Percentage): ~33% users get v2, some get v3, rest get v1
# 6. recommendation-algorithm (User Targeted):
#    - Premium/Enterprise users → machine-learning
#    - US/CA/UK users → content-based
#    - Others → collaborative-filtering
# 7. admin-panel-enabled (User Targeted):
#    - Admin/Super-admin roles → enabled
#    - Engineering/Operations departments → enabled
#    - Others → disabled (404 response)
#
# STATUS CODE SUMMARY:
# - 200 OK: All successful responses (most endpoints)
# - 404 Not Found: Admin endpoint when user lacks access
#
# TESTING TIPS:
# - Run tests at different times to see time window effects
# - Try different user IDs to see percentage rollout distribution
# - Modify user attributes (role, department, country, userType) to test targeting
# - Check logs to see which feature flag variations are being used
# - Admin endpoint is the only one that returns 404 for unauthorized users
# - All other endpoints return 200 with different content based on feature flags